Steps to execute the Indexing and Retrieval using Lucene assignment in Java:
============================================================================
1. Open Ecipse Luna on CCIS machine. If not present please install Eclipse Mars (Link to download: http://www.eclipse.org/downloads/)
2. Unzip/Extract LuceneZipf.zip file.
3. Go to File --> Import... --> General and finally select "Existing Projects into Workspace" and then click Next.
4. On the next dialog box, hit Browse and select folder "LuceneZipf" (Note: It may be present inside a folder called "LuceneZipf"  
   which consists of 'LuceneZipf' and 'MACOSX' Please select the inner folder.  
5. Check 'Copy projects into workspace' and then hit Finish.
6. You could see several errors in the project folder. (This is due to difference in Java versions). 
   If no errors then you can proceed to step 7.
7. To solve the errors:
	a. Right click on the LuceneZipf project -->'Properties' --> 'Java Build Path' --> 'Libraries'.
	b. You could see errors in JRE System Library as it would be using [JavaSE-1.8] (displayed as unbound).
	c. Next select JRE System Library and then hit 'Edit' and select the Execution environment as (JavaSE-1.7 or the java version 
	   the machine is running on) and then hit 'Finish'. 
	d. Press OK and then we are good to run the program.
8. Expand the LuceneZipf project in Project Explorer. Then --> src --> edu.neu.cs6200.luceneSimpleAnalyzer package.

For execution of the program using the raw (unpre-processed) CACM corpus using Lucene
=====================================================================================
	a. Open the HW4.java file and hit Run (Green button with an arrow at the top).
	b. Once the program runs it will prompt for the following.
	   b.1 Enter the FULL path where the index will be created: (e.g. /Usr/index or c:\temp\index)
	   b.1.1 Please enter the folder name as "index" or any folder name of your choice. The indexes 
	         generated by Lucene SimpleAnalyser will be stored at this location.
	         Please Note: If you are using the same folder for another run, make sure to delete all
	         the indexes present at this location before the next run.
	c. Then the program will prompt for the following.
	   c.1 Enter the FULL path to add into the index (q=quit): (e.g. /home/mydir/docs or c:\Users\mydir\docs)
	       [Acceptable file types: .xml, .html, .html, .txt]
	   c.1.1 Please enter the folder name where the entire document collection is present. In this case,
	         please enter "my_cacm" as the directory name.
	   c.1.2 The same prompt would repeat again and if there is some other corpus or a document
	         collection to be added, then please enter the path where it is present. If not then
	         hit "q".
	d. A JFrame would appear which will plot the Zipfian curve for the particular document collection.
	   (Using JFreeChart to plot the Zipfian curve in the program)
	e. The program terminates and all the results are stored in the subsequent files. It will also 
	   display the number of hits for the specific queries.

Contents of LuceneZipf.zip :
============================
1. LuceneZipf project folder
2. LuceneZipf project folder consist of the below files apart from source files (HW4.java and Plot.java):
   a. LuceneVsBM25.txt     : contains a table comparing the total number of documents retrieved per query 
   						     using Luceneâ€™s scoring function vs. using your search engine (index with BM25) 
   						     from the previous assignment.
   b. queries.txt          : is the input file consisting of all the queries for this assignment.
   c. Readme.txt           : instructions to run the program.
   d. results.txt          : file containing four lists (one per query) each containing at MOST 100 docIDs ranked by score 
                             (optional: provide a text snippet of 200 chars along the DocID).
   e. sorted_pair_list.txt : file containing a sorted (by frequency) list of (term, term_freq pairs).
   f. ZipfianCurve.png     : An image file which consists of a screenshot of the Zipfian curve generated by the program.
 2.1 jars folder contains the list of following jar files used in the program. (If any issues during the setting up
     the project, please reference the libraries from this location).
   a. jcommon-1.0.23.jar
   b. jfreechart-1.0.19-experimental.jar
   c. jfreechart-1.0.19.jar
   d. jsoup-1.8.3.jar
   e. lucene-analyzers-common-4.7.2.jar
   f. lucene-core-4.7.2.jar
   g. lucene-queryparser-4.7.2.jar
